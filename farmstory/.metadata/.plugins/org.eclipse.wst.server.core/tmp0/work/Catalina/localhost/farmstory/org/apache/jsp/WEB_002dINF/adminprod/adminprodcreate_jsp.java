/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-08-29 12:18:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.adminprod;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class adminprodcreate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/farmstory/css/adminprodcreate.css\">\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("        function validateFileSize(input) {\r\n");
      out.write("            const maxSize = 2 * 1024 * 1024; // 최대 파일 크기 2MB (2 * 1024 * 1024 바이트)\r\n");
      out.write("            const files = input.files;\r\n");
      out.write("            \r\n");
      out.write("            for (let i = 0; i < files.length; i++) {\r\n");
      out.write("                if (files[i].size > maxSize) {\r\n");
      out.write("                    alert('파일이 너무 큽니다. 최대 파일 크기는 2MB입니다.');\r\n");
      out.write("                    input.value = \"\"; // 파일 선택을 취소합니다.\r\n");
      out.write("                    return false;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/layout/adminheader.jsp", out, false);
      out.write("\r\n");
      out.write("<main>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/layout/adminsidebar.jsp", out, false);
      out.write("\r\n");
      out.write("	<div id=\"section2_main\">\r\n");
      out.write("          <div id=\"section2_title\">상품등록</div>\r\n");
      out.write("          <div id=\"article_wrapper\">\r\n");
      out.write("            <form action=\"/farmstory/admin/prodcreate.do\" id=\"article1\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("              <div>\r\n");
      out.write("              <table id=\"prod_table\">\r\n");
      out.write("                <tr id=\"prod_name\">\r\n");
      out.write("                  <td>상품명</td>\r\n");
      out.write("                  <td><input type=\"text\" name=\"prod_name\"></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_category\">\r\n");
      out.write("                  <td>종류</td>\r\n");
      out.write("                  <td>\r\n");
      out.write("                    <select name=\"type\">\r\n");
      out.write("                      <option value=\"\">종류</option>\r\n");
      out.write("                      <option value=\"과일\">과일</option>\r\n");
      out.write("                      <option value=\"야채\">야채</option>\r\n");
      out.write("                      <option value=\"신선야채\">신선야채</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                  </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_price\">\r\n");
      out.write("                  <td>가격</td>\r\n");
      out.write("                  <td><input type=\"text\" name=\"price\"></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_point\">\r\n");
      out.write("                  <td>포인트</td>\r\n");
      out.write("                  <td><input type=\"text\" name=\"point\"/>포인트는 가격의 1%</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_discount\">\r\n");
      out.write("                  <td>할인</td>\r\n");
      out.write("                  <td>\r\n");
      out.write("                    <select name=\"discount\">\r\n");
      out.write("                      <option value=\"5\">5%</option>\r\n");
      out.write("                      <option value=\"10\">10%</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                  </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_delivery\">\r\n");
      out.write("                  <td>배송비</td>\r\n");
      out.write("                  <td>\r\n");
      out.write("                    <input type=\"radio\" name=\"deliveryfee\" value=\"2000\">2,000원\r\n");
      out.write("                    <input type=\"radio\" name=\"deliveryfee\" value=\"3000\">3,000원\r\n");
      out.write("                    <input type=\"radio\" name=\"deliveryfee\" value=\"5000\">5,000원\r\n");
      out.write("                    <input type=\"radio\" name=\"deliveryfee\" value=\"0\">무료\r\n");
      out.write("                  </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_stock\">\r\n");
      out.write("                  <td>재고</td>\r\n");
      out.write("                  <td><input type=\"text\" name=\"stock\"/></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_image\">\r\n");
      out.write("                  <td>상품이미지</td>\r\n");
      out.write("                  <td>\r\n");
      out.write("                    <a class=\"img_describe\">상품목록 이미지(약 120 X 120)</a>\r\n");
      out.write("                    <div>\r\n");
      out.write("                      <input type=\"file\" name=\"file_list\"/>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <a class=\"img_describe\">기본정보 이미지(약 240 X 240)</a>\r\n");
      out.write("                    <div>\r\n");
      out.write("                      <input type=\"file\" name=\"file_basic\"/>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <a class=\"img_describe\">상품설명 이미지(약 120 X 120)</a>\r\n");
      out.write("                    <div>\r\n");
      out.write("                      <input type=\"file\" name=\"file_description\"/>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr id=\"prod_etc\">\r\n");
      out.write("                  <td>기타</td>\r\n");
      out.write("                  <td><textarea name=\"etc\"></textarea></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("              </table>\r\n");
      out.write("              </div>\r\n");
      out.write("	          <div id=\"prod_heading\">\r\n");
      out.write("	              <a href=\"#\" id=\"prod_del\">취소</a>\r\n");
      out.write("	              <button type=\"submit\" id=\"prod_reg\">상품등록</button>\r\n");
      out.write("	          </div>\r\n");
      out.write("            </form>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("</main>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/layout/adminfooter.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
